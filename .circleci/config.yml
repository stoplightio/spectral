version: 2.1

orbs:
  stoplight: stoplight/cli@0.0.2

commands:
  cached-dependencies:
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  install-and-test:
    description: >-
      Install everything required to run the test suite, then run it.
    steps:
      - checkout
      - cached-dependencies
      - run: yarn
      - run:
          name: Build the code
          command: yarn build
      - run:
          name: Run browser tests
          command: yarn test.karma
      - run:
          name: Run node tests
          command: yarn test --coverage --maxWorkers=2
      - run:
          name: Create the Spectral Binary
          command: yarn build.binary
      - run:
          name: Create output directory
          command: mkdir ./test-harness/tmp
      - run:
          name: Run harness tests
          command: yarn test.harness
      - run:
          name: Lint the code
          command: yarn lint

jobs:
  test-node-latest:
    docker:
      - image: circleci/node:latest-browsers
    steps:
      - install-and-test

  test-node-12:
    docker:
      - image: circleci/node:12-browsers
    steps:
      - install-and-test

  test-node-10:
    docker:
      - image: circleci/node:10-browsers
    steps:
      - install-and-test

  release:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - cached-dependencies
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run: npm version from-git
      - run: yarn inline-version
      - run: yarn build
      - run: |
          if [[ "$CIRCLE_TAG" == *beta* ]] ; then
            npm publish --tag beta
          elif [[ "$CIRCLE_TAG" == *alpha* ]] ; then
            npm publish --tag alpha
          else
            npm publish
          fi
      - run: npx pkg . --targets linux,macos --out-path ./binaries
      - persist_to_workspace:
          root: ./
          paths:
            - binaries

  upload_artifacts:
    docker:
      - image: circleci/golang:1-stretch
    steps:
      - attach_workspace:
          at: /tmp/
      - run:
          name: "Download GitHub Release Utility"
          command: go get github.com/tcnksm/ghr
      - run:
          name: "Publish Release artifacts on GitHub"
          command: ghr -t ${GH_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} ${CIRCLE_TAG} /tmp/binaries

workflows:
  commit:
    jobs:
      # - test-node-latest TODO bring it back when circle supports node-13
      - test-node-12
      - test-node-10
  release:
    jobs:
      - release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - upload_artifacts:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          requires:
            - release
      - stoplight/analyze:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
          requires:
            - release
