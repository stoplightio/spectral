{
  "extends": ["spectral:oas"],
  "formats": ["oas2"],
  "rules": {
    "api-host": {
      "description": "OpenAPI `host` must be present and non-empty string.",
      "recommended": true,
      "type": "style",
      "given": "$",
      "then": {
        "field": "host",
        "function": "truthy"
      },
      "tags": [
        "api"
      ]
    },
    "api-schemes": {
      "description": "OpenAPI host `schemes` must be present and non-empty array.",
      "recommended": true,
      "type": "style",
      "given": "$",
      "then": {
        "field": "schemes",
        "function": "schema",
        "functionOptions": {
          "schema": {
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "type": "array"
          }
        }
      },
      "tags": [
        "api"
      ]
    },
    "host-not-example": {
      "description": "Server URL should not point at `example.com`.",
      "recommended": false,
      "type": "style",
      "given": "$",
      "then": {
        "field": "host",
        "function": "pattern",
        "functionOptions": {
          "notMatch": "example\\.com"
        }
      }
    },
    "host-trailing-slash": {
      "description": "Server URL should not have a trailing slash.",
      "recommended": true,
      "type": "style",
      "given": "$",
      "then": {
        "field": "host",
        "function": "pattern",
        "functionOptions": {
          "notMatch": "/$"
        }
      }
    },
    "model-description": {
      "description": "Definition `description` must be present and non-empty string.",
      "recommended": false,
      "type": "style",
      "given": "$..definitions[*]",
      "then": {
        "field": "description",
        "function": "truthy"
      }
    },
    "oas2-parameter-description": {
      "description": "Parameter objects should have a `description`.",
      "recommended": false,
      "type": "style",
      "given": "$..[?(@parentProperty === 'parameters' && @.in)]",
      "then": {
        "field": "description",
        "function": "truthy"
      },
      "tags": [
        "parameters"
      ]
    },
    "oas2-operation-security-defined": {
      "description": "Operation `security` values must match a scheme defined in the `securityDefinitions` object.",
      "recommended": true,
      "type": "validation",
      "given": "$",
      "then": {
        "function": "oasOpSecurityDefined",
        "functionOptions": {
          "schemesPath": [
            "securityDefinitions"
          ]
        }
      },
      "tags": [
        "operation"
      ]
    },
    "valid-example-in-parameters": {
      "description": "Examples must be valid against their defined schema.",
      "message": "{{error}}",
      "recommended": true,
      "severity": 0,
      "type": "validation",
      "given": "$..parameters..[?(@.in == 'body')]..[?(@property !== 'properties' && @.example && ( @.type || @.format || @.$ref ))]",
      "then": {
        "function": "schemaPath",
        "functionOptions": {
          "field": "example",
          "schemaPath": "$"
        }
      }
    },
    "valid-example-in-definitions": {
      "description": "Examples must be valid against their defined schema.",
      "message": "{{error}}",
      "recommended": true,
      "severity": 0,
      "type": "validation",
      "given": "$..definitions..[?(@property !== 'properties' && @.example && (@.type || @.format || @.$ref))]",
      "then": {
        "function": "schemaPath",
        "functionOptions": {
          "field": "example",
          "schemaPath": "$"
        }
      }
    },
    "oas2-anyOf": {
      "description": "OpenAPI v3 keyword `anyOf` detected in OpenAPI v2 document.",
      "message": "anyOf is not available in OpenAPI v2, it was added in OpenAPI v3",
      "recommended": true,
      "type": "validation",
      "given": "$..[?(@.anyOf)]",
      "then": {
        "field": "anyOf",
        "function": "undefined"
      },
      "tags": [
        "schema"
      ]
    },
    "oas2-oneOf": {
      "description": "OpenAPI v3 keyword `oneOf` detected in OpenAPI v2 document.",
      "message": "oneOf is not available in OpenAPI v2, it was added in OpenAPI v3",
      "recommended": true,
      "type": "validation",
      "given": "$..[?(@.oneOf)]",
      "then": {
        "field": "oneOf",
        "function": "undefined"
      },
      "tags": [
        "schema"
      ]
    },
    "oas2-schema": {
      "description": "Validate structure of OpenAPI v2 specification.",
      "message": "{{error}}",
      "type": "validation",
      "severity": 0,
      "recommended": true,
      "given": "$",
      "then": {
        "function": "schema",
        "functionOptions": {
          "schema": {
            "$ref": "./schemas/main.json"
          }
        }
      },
      "tags": [
        "schema"
      ]
    }
  }
}
