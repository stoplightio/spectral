====test====
Loose JSON Schema can be validated
====document====
{
  "title": "Todo Full",
  "allOf": [
    {
      "title": "Todo Partial",
      "description": "",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "completed": {
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "required": [
        "name",
        "completed"
      ]
    },
    {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "maximum": 1000000
        },
        "completed_at": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "user"
      ]
    }
  ]
}
====command====
lint {document} --ruleset ./test-harness/scenarios/rulesets/loose-schema-ruleset.json
====stdout====
JSON Schema (loose) detected

{document}
 3:11    error  no-root-all-of        No root allOf combiner
 6:22  warning  no-empty-description  Description must not be empty

âœ– 2 problems (1 error, 1 warning, 0 infos, 0 hints)
