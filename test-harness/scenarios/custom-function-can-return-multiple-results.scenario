====test====
Custom function can return multiple results
====document====
tags:
  - name: a-tag
    description: A tag
  - name: b-tag
    description: Another tag
  - name: a-tag
    description: A tag. Huh?
  - name: a-tag
    description: A tag. Srsly!

paths: {}
====asset:fn.js====
// Code sample from `custom-functions.md`

const NAME_PROPERTY = 'name';

module.exports = (targetVal, _opts, { path: rootPath }) => {
  if (!Array.isArray(targetVal)) {
    return;
  }

  const seen = [];
  const results = [];

  for (let i = 0; i < targetVal.length; i++) {
    if (targetVal[i] === null || typeof targetVal[i] !== 'object') {
      continue;
    }

    const tagName = targetVal[i][NAME_PROPERTY];

    if (tagName === void 0) {
      continue;
    }

    if (seen.includes(tagName)) {
      results.push(
        {
            message: `Duplicate tag name '${tagName}'`,
            path: [...rootPath, i, NAME_PROPERTY]
        },
      );
    } else {
      seen.push(tagName);
    }
  }

  return results;
};
====asset:ruleset====
const fn = require('{asset:fn.js}');

module.exports = {
  rules: {
    'unique-tag-names': {
      message: "Tags should have distinct names: {{error}}",
      given: "$.tags",
      then: {
        function: fn,
      },
    },
  },
}
====command====
{bin} lint {document} --ruleset "{asset:ruleset}"
====stdout====
{document}
 6:11  warning  unique-tag-names  Tags should have distinct names: Duplicate tag name 'a-tag'  tags[2].name
 8:11  warning  unique-tag-names  Tags should have distinct names: Duplicate tag name 'a-tag'  tags[3].name

âœ– 2 problems (0 errors, 2 warnings, 0 infos, 0 hints)
