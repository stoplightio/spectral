====test====
Will fail and return 1 as exit code because errors exist with scoring data
====document====
- type: string
- type: array
====asset:ruleset.json====
{
  "rules": {
    "valid-type": {
      "given": "$..type",
      "severity": "error",
      "then": {
        "function": "enumeration",
        "functionOptions": {
          "values": ["object"]
        }
      }
    },
    "no-primitive-type": {
      "given": "$..type",
      "severity": "warn",
      "then": {
        "function": "enumeration",
        "functionOptions": {
          "values": ["string", "number", "boolean", "null"]
        }
      }
    }
  }
}
====asset:scoring-config.json====
{
  "scoringSubtract":
    {
      "error":
        {
          "1":55,
          "2":65,
          "3":75,
          "6":85,
          "10":95
        },
     "warn":
        {
          "1":3,
          "2":7,
          "3":10,
          "6":15,
          "10":18
        }
    },
  "scoringLetter":
    {
      "A": 75,
      "B": 65,
      "C": 55,
      "D": 45,
      "E": 0
    },
  "threshold": 50,
  "onlySubtractHigherSeverityLevel": true,
  "uniqueErrors": false
}
====command-nix====
{bin} lint {document} --ruleset "{asset:ruleset.json}" --fail-severity=error --scoring-config "{asset:scoring-config.json}"
====command-win====
{bin} lint {document} --ruleset "{asset:ruleset.json}" --fail-severity error --scoring-config "{asset:scoring-config.json}"
====status====
1
====stdout====
{document}
 1:9    error  valid-type         "string" must be equal to one of the allowed values: "object"                              [0].type
 2:9  warning  no-primitive-type  "array" must be equal to one of the allowed values: "string", "number", "boolean", "null"  [1].type
 2:9    error  valid-type         "array" must be equal to one of the allowed values: "object"                               [1].type

✖ 3 problems (2 errors, 1 warning, 0 infos, 0 hints)
✖ SCORING: E (32%)
✖ FAILED!
